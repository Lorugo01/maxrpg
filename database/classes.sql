create table public.classes (
  id uuid not null default gen_random_uuid (),
  name character varying(50) not null,
  hit_die integer not null,
  primary_ability character varying(20) not null,
  saving_throws character varying(500) not null,
  skill_proficiencies character varying(1000) not null,
  equipment character varying(500) null,
  features jsonb null,
  spellcasting jsonb null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  source character varying(100) null,
  armor_proficiencies character varying(500) null,
  weapon_proficiencies character varying(500) null,
  tool_proficiencies character varying(500) null,
  subclasses character varying(500) null,
  description text null,
  equipment_lado_a text null,
  equipment_lado_b text null,
  level_features jsonb null default '[]'::jsonb,
  has_spells boolean null default false,
  spell_levels jsonb null,
  spell_slots_levels jsonb null,
  subclasses_details jsonb null,
  skill_count integer null default 2,
  has_usage_limit boolean null default false,
  usage_type character varying(50) null,
  usage_value integer null,
  usage_recovery text null,
  usage_attribute character varying(20) null,
  manual_level_increases jsonb null,
  has_dice_increase boolean null default false,
  initial_dice character varying(20) null,
  dice_increases jsonb null,
  has_proficiency_doubling boolean null default false,
  proficiency_skill_count integer null default 0,
  equipment_lado_a_items jsonb null,
  equipment_lado_b_items jsonb null,
  po_lado_a integer null default 0,
  po_lado_b integer null default 0,
  equipment_choices jsonb null default '[]'::jsonb,
  constraint classes_pkey primary key (id),
  constraint classes_name_key unique (name)
) TABLESPACE pg_default;

create trigger update_classes_updated_at BEFORE
update on classes for EACH row
execute FUNCTION update_updated_at_column ();